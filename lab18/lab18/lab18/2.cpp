#include <iostream>  // Подключение стандартной библиотеки ввода-вывода

// Прототип функции metodPr: вычисляет площадь криволинейной трапеции
// fun - указатель на функцию, вычисляющую значение функции в точке
// a, b - границы интегрирования
// h - шаг разбиения
double metodPr(double(*fun)(double), double a, double b, double h);

// Прототип функции f: описывает математическую функцию
double f(double);

int main()
{
    double z;  // Переменная для хранения результата вычислений

    // Вызов функции metodPr для функции f на интервале [0.0, 2.0] с шагом 0.01
    z = metodPr(f, 0.0, 2.0, 0.01);

    // Вывод результата вычислений
    std::cout << "Result1=" << z;

    return 0;  // Успешное завершение программы
}

// Функция metodPr: численно вычисляет площадь криволинейной трапеции
double metodPr(double (*fun)(double), double a, double b, double h)
{
    double x, s = 0.0;  // x - текущая точка, s - накопленная сумма
    x = a + h;  // Начальное значение x (следующее после a)

    // Цикл суммирования по отрезкам
    while (x <= b)
    {
        s += h * fun(x);  // Добавляем площадь прямоугольника к общей сумме
        x = x + h;  // Переход к следующей точке
    }

    return s / 2;  // Возвращаем половину суммы (учет трапеции)
}

// Функция f: описывает зависимость y = 2x + 5
double f(double x)
{
    return (2 * x + 5);  // Возвращает значение функции в точке x
}
